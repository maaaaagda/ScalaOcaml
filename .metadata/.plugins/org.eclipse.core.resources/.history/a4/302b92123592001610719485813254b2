(function x -> x+x) 6;; 

let nth = (-2, -1, 0, 1, 2);;
let (-2, -1, x, 1, 2) = nth;;
let (a, b, c, d, f) = nth;;

let sth = (true, "hello", 0);;
let (b, s, i)=sth;;
let sth = (true,"hello",0);;
let (_,_,x) = sth;;


let a = [-2; -1; 0; 1; 2];;
let [_; _; x; _; _] = a;;

let ntt =  ((1,2),(0,1));;
let ((_,_),(x,_)) = ntt;;

let [(a,b);(c,d)] = nt;;
let[(1,y);(x,1)] = nt;;

let k = (true, 5.0);;
let(f, g) = k;;
let(true, x) = k;;

let rec fib p= 
	match p with
	| 0->0
	| 1->1
	| _ -> fib(p-1)+fib(p-2) ;;

fib(42);;

let rec fibpom (a, b, n) = 
  if n = 0 then a else fibpom (b, (a + b), (n - 1));;
let fibn n = fibpom (0, 1, n);;
fibn 4;;
fib1(42);;

let rec replaceNth (lista, elemZmian, liczba) = 
		match (List.length lista mod(liczba+1), lista, liczba)  with
	| (_,[])->[]
	| (0, _) -> elemZmian:: replaceNth(lista, elemZmian, liczba)
	| _ -> List.hd lista::replaceNth(List.tl lista, elemZmian,
	liczba*(List.length lista mod (liczba+1))-1);;
	
	replaceNth(5::8::9::1::3::4::5::[],100, 2);;
	
	let rec initSegment (xs, xm)=
		if(xs = []) then true
		else if(xm=[]) then false
		else if (List.hd xs <> List.hd xm) then false
		else  initSegment(List.tl xs, List.tl xm);;

initSegment(3::[], 3::[]);;




let replaceNth (lista, liczba, elemZmian) = 
		match lista with
		| ([]) -> []
		| (h1::t1) -> h1::t1
		| _ -> elemZmian::[];;
	
	replaceNth(5::8::9::1::3::4::5::[],100, 2);;
		